name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch: {}

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: lint (black, flake8, mypy)
    runs-on: ubuntu-latest
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PYTHONUTF8: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install project (dev extras)
        run: |
          python -m pip install -U pip
          python -m pip install ".[dev]"

      - name: Run black
        run: black --check .

      - name: Run flake8
        run: flake8 .

      - name: Run mypy
        run: mypy .

  test:
    name: tests (${{ matrix.os }} / py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.11"]

    env:
      # Qt系を使う可能性があってもヘッドレスで安全に動くように
      QT_QPA_PLATFORM: offscreen
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PYTHONUTF8: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install project (dev extras)
        run: |
          python -m pip install -U pip
          python -m pip install ".[dev]"

      - name: Run tests
        run: |
          python -m pytest -q --junitxml=test-results/pytest-${{ matrix.os }}.xml

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report-${{ matrix.os }}-py${{ matrix.python-version }}
          path: test-results/*.xml
